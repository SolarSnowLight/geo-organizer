basePath: /
definitions:
  handler.LogoutOutputModel:
    properties:
      is_logout:
        type: boolean
    type: object
  handler.errorResponse:
    properties:
      message:
        type: string
    type: object
  model.TokenDataModel:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  model.TokenRefreshModel:
    properties:
      refresh_token:
        type: string
    type: object
  model.UserAuthDataModel:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  model.UserLoginModel:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  model.UserRegisterModel:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
      surname:
        type: string
    required:
    - email
    - name
    - password
    - surname
    type: object
host: localhost:8000
info:
  contact: {}
  title: Geo-organizer API
  version: "1.0"
paths:
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Обновление токена доступа и токена обновления
      operationId: refresh
      parameters:
      - description: credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.TokenDataModel'
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            $ref: '#/definitions/handler.LogoutOutputModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Refresh
      tags:
      - auth
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: Авторизация пользователя
      operationId: login
      parameters:
      - description: credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.UserLoginModel'
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            $ref: '#/definitions/model.UserAuthDataModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: SignIn
      tags:
      - auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: Регистрация пользователя
      operationId: create-account
      parameters:
      - description: account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.UserRegisterModel'
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            $ref: '#/definitions/model.UserAuthDataModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: SignUp
      tags:
      - auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
